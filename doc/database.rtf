{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red71\green91\blue98;
\red0\green0\blue0;\red255\green255\blue255;\red196\green26\blue22;\red28\green0\blue207;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\csgray\c100000;\cssrgb\c34510\c43137\c45882;
\csgenericrgb\c0\c0\c0\c85000;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c77000\c10200\c8600;\csgenericrgb\c11000\c0\c81000;}
\margl1440\margr1440\vieww24700\viewh16480\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 The database is a Firebase Realtime Database at https://glyco-6f403.firebaseio.com/. \
\
You can view the structure of the database at that link.\
\
Here is an example JSON output from the database: \
\
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f1\fs24 \cf5 \cb6 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \{\
  \cf7 "userMeasurements"\cf5  : \{\
    \cf7 \'93user1id\'94\cf5  : \{\
      \cf7 "measurements"\cf5  : \{\
        \cf7 \'93measurement1id\'94\cf5  : \{\
          \cf7 "a1cLevel"\cf5  : \cf8 0.0\cf5 ,\
          \cf7 "avgGlucoseLevel"\cf5  : \cf8 0.0\cf5 ,\
          \cf7 "calories"\cf5  : \cf8 240\cf5 ,\
          \cf7 "carbs"\cf5  : \cf8 60\cf5 ,\
          \cf7 "currGlucoseLevel"\cf5  : \cf8 0.0\cf5 ,\
          \cf7 "date"\cf5  : \cf7 "2020-11-11T16:32:11.104176"\cf5 ,\
          \cf7 "exerciseTime"\cf5  : \cf8 0\cf5 ,\
          \cf7 "lastUpdate"\cf5  : \cf7 "2020-11-11T16:32:11.104176"\cf5 ,\
          \cf7 "steps"\cf5  : \cf8 0\cf5 \
        \},\
        \cf7 \'93measurement2id\'94\cf5  : \{\
          \cf7 "a1cLevel"\cf5  : \cf8 0.0\cf5 ,\
          \cf7 "avgGlucoseLevel"\cf5  : \cf8 0.0\cf5 ,\
          \cf7 "calories"\cf5  : \cf8 240\cf5 ,\
          \cf7 "carbs"\cf5  : \cf8 60\cf5 ,\
          \cf7 "currGlucoseLevel"\cf5  : \cf8 0.0\cf5 ,\
          \cf7 "date"\cf5  : \cf7 "2020-11-10T00:00:00.000"\cf5 ,\
          \cf7 "exerciseTime"\cf5  : \cf8 0\cf5 ,\
          \cf7 "lastUpdate"\cf5  : \cf7 "2020-11-10T00:00:00.000"\cf5 ,\
          \cf7 "steps"\cf5  : \cf8 0\cf5 \
        \}\
      \}\
    \}\
  \},\
  \cf7 "userSettings"\cf5  : \{\
    \cf7 \'93user1id\'94\cf5  : \{\
      \cf7 "settings"\cf5  : \{\
        \cf7 "drinkCarbs"\cf5  : \cf8 10\cf5 ,\
        \cf7 "exerciseTime"\cf5  : \cf8 30\cf5 ,\
        \cf7 "mealCarbs"\cf5  : \cf8 60\cf5 ,\
        \cf7 "snackCarbs"\cf5  : \cf8 15\cf5 \
      \}\
    \}\
  \}\
\}\
\

\f0\fs30 The database is split up into two parts: userMeasurements and userSettings. \
\
The reasoning behind this splitting up of measurements and settings is that user settings are going to be expanded upon in future iterations, for example by allowing users to have multiple different integrations. Having this split also means that every time we want to fetch a user\'92s measurements, the settings don\'92t need to be fetched, making a more efficient asynchronous call. Similarly, fetching settings would mean not needing to also fetch measurements. }